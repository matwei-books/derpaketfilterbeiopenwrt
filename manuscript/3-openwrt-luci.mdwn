
Die Webschnittstelle LuCI
=========================

Ein Vorteil der browserbasierten Konfiguration ist, dass sie Leuten, die die
Kommandozeile eher scheuen, die Administration von OpenWrt akzeptabel machen
kann.
Insbesondere, wenn ich längere Zeit keine Router konfiguriert habe, liefert
die Webschnittstelle genügend Kontext, um eine kleine Änderung mal eben
schnell einzustellen.

Mit der Programmiersprache Lua kann ich die Schnittstelle für meine Zwecke
erweitern.

In den meisten Fällen wird die Webschnittstelle auf Englisch eingestellt
sein.
Will ich die Konfiguration in deutscher Sprache, muss ich gegebenenfalls
unter **System -> Software** das Paket *luci-i18n-german* installieren.
Danach sollte sich die Webschnittstelle automatisch auf die in den
Spracheinstellungen des Browser gemachten Vorgaben einstellen.
Tut sie das nicht, kann ich unter **System -> System** im Reiter *Sprache
und Aussehen* die Einstellungen anpassen.

An manchen Stellen merkt sich LuCI Änderungen, die ich noch nicht
gespeichert habe.
Dann zeigt sie oben rechts einen anklickbaren Hinweistext
"Ungespeicherte Änderungen".
Klicke ich darauf, zeigt mir LuCI die noch nicht gespeicherten Änderungen
für die Kommandozeilenoberfläche UCI.
Dann kann ich diese anwenden, speichern und anwenden oder verwerfen.

Damit genug des Vorgeplänkels, kommen wir zur Konfiguration der Firewall mit
LuCI.

Zuordnung der Netzwerke und Schnittstellen
------------------------------------------

Ich beginne, indem ich die Schnittstellen, die mein Gerät besitzt, den
Netzwerken respektive Firewall-Zonen meiner Policy zuordne.

Bei OpenWrt habe ich verschiedene Möglichkeiten, die Schnittstellen
zuzuordnen: eine Zone kann eine Schnittstelle umfassen oder mehrere
Schnittstellen, die in einer Bridge zusammengefasst sind.

Für diese Einstellungen gehe ich in den Menüpunkt
**Netzwerk -> Schnittstellen** und wähle eine Schnittstelle über den
Schalter *Bearbeiten* aus, oder füge eine neue Schnittstelle mit dem
Schalter *Neue Schnittstelle hinzufügen* hinzu.

Beim Reiter  *Allgemeinen Einstellungen* stelle ich bei *Protokoll* ein, wie
die Adressen konfiguriert werden (Statische Adresse, DHCP-Client, Ignoriert,
...) und stelle nötigenfalls die Netzwerk-Konfiguration selbst ein.

Beim Reiter *Erweiterten Einstellungen* vergewissere ich mich, dass die
Schnittstelle während des Bootvorgangs aktiviert wird.
Hier kann ich bei Bedarf die MAC-Adresse, die MTU und die Gateway-Metrik
vorgeben.

Beim Reiter *Physikalische Einstellungen* kann ich die zu einer Bridge
gehörenden Schnittstellen festlegen oder eine Schnittstelle auswählen, wenn
ich keine Bridge in der Zone betreibe.

Beim Reiter*Firewall Einstellungen* weise ich die Zonen für die Firewall zu
oder lege eine neue Firewallzone an.
Diese Zonen sind die Zonen im Modell aus dem vorigen Kapitel, die im Graphen
unter dem Namen "bereich" zusammengefasst sind.

Habe ich Netzwerke, die nicht direkt mit dem Gerät verbunden sind und
verwende kein Routing-Protokoll, kann ich über den Menüpunkt
**Netzwerk -> Statische Routen** das Gateway dorthin angeben.

Damit habe ich die grundlegenden Netzwerkeinstellungen und kann mich nun der
eigentlichen Konfiguration der Firewall widmen.


Allgemeine Firewall-Einstellungen
---------------------------------

Ich beginne beim Menü
**Netzwerk -> Firewall** im Reiter *Allgemeine Einstellungen*.

Mit einem Haken kann ich den Schutz vor SYN-Flood-Attacken aktivieren, was
mir für TCP-Datagramme beim Verbindungsaufbau in der Iptables-Tabelle
*filter* einen Sprung von der Regelkette *delegate_input* zur Kette
*syn_flood* beschert.
Das heißt, dieser Schutz gilt nur für Datagramme direkt an das Gerät.

Mit dem Haken *Ungültige Pakete verwerfen* kommt in jede der Regelketten
*delegate_forward*, *delegate_input* und *delegate_output* eine Regel, die
Datagramme, die keiner bekannten Verbindung zugeordnet werden können,
verwirft.

Bei den Richtlinien für Eingang, Ausgang und Weiterleitung lege ich fest,
wie mit Datagrammen verfahren wird, für die es keine explizite Regel gibt.

Im Abschnitt *Zonen* kann ich detaillierte Vorgaben machen.
Hier finde ich die Zonen aus den Netzwerkeinstellungen.

In der Tabelle der Weiterleitungen gebe ich generell vor, zwischen welchen
Zonen Daten ausgetauscht werden dürfen.
Mit dem Schalter *Hinzufügen* kann ich weitere Weiterleitungen definieren.
Über den Schalter *Bearbeiten* kann ich bestehende Weiterleitungen
modifizieren.

Hier kann ich - analog zu den globalen Richtlinien - festlegen, wie mit
Datagrammen zwischen zwei Zonen verfahren wird, für die es keine explizite
Regel gibt.

Mit dem Haken bei *NAT aktivieren* stelle ich Masquerading für abgehende
Datagramme in dieser Zone ein.

Der Haken bei *MSS Korrektur* erzeugt in Iptables-Tabelle *mangle* eine
Regel in der Kette *mssfix*, mit der beim Aufbau von TCP-Verbindungen die
Maximum Segment Size (MSS) an die MTU der Zone anpasst.

Die von der Zone abgedeckten Netzwerke entsprechen denen in den
Netzwerkeinstellungen

Bei *Weiterleitungen zwischen Zonen* stelle ich ein, zu beziehungsweise von
welchen Zonen ich weiterleiten möchte.
Dabei erzeugt ein Haken bei den entsprechenden Zonen, dass ein Sprung in der
Kette *zone_quellbereich_forward* zur Kette *zone_zielbereich_dest_ACCEPT*
angelegt wird.

In den *Erweiterten Einstellungen* kann ich die Zonen auf eine Adressfamilie
(IPv4, IPv6) beschränken.

Weiterhin kann ich NAT auf bestimmte Quell- oder Zielnetze beschränken.

Connection Tracking ist nur bei NAT automatisch aktiv.
Hier kann ich es gezielt einschalten, genauso wie das Logging für die Zone.

Portweiterleitungen
-------------------

Insbesondere bei NAT, wie ich es in SOHO-Routern oft finde, habe ich keine
Möglichkeit, von der externen Seite aus, einen Rechner auf der internen
Seite zu erreichen, da der Router das einzige Gerät ist, dessen Adresse im
externen Netz bekannt ist.

Hier helfe ich mir mit Port-Weiterleitungen zumindest für TCP und UDP
weiter.
Dabei gebe ich einen frei wählbaren Namen für die Weiterleitung an, das
Protokoll, die externe Zone und den Port, sowie die interne Zone, Adresse
und Port, an die das Datagramm weitergeleitet werden soll.

Beim Protokoll habe ich die Auswahl zwischen:

*   TCP+UDP: die Portweiterleitung gilt gleichermaßen für beide Protokolle
*   TCP: nur für TCP
*   UDP: nur für UDP
*   Anderes: für andere Protokolle, zum Beispiel ICMP

Die Weiterleitung für andere Protokolle ist etwas kompliziert.
Diese lassen sich am ehesten über den Schalter "Bearbeiten" einer
bestehenden Weiterleitung einstellen.
Auf jeden Fall muss ich die erzeugte Regel kontrollieren und am Besten auch
ausprobieren.

Verkehrsregeln
--------------

Beim Reiter *Verkehrsregeln* finde ich eine sortierte Liste von Regeln, in
die ich meine eigenen Regeln einfügen kann.

Einige Regeln sind bereits vordefiniert, wie zum Beispiel

*   Allow-DHCP-Renew
*   Allow-Ping
*   Allow-DHCPv6
*   Allow-ICMPv6-Input
*   Allow-ICMPv6-Forward

Hier kann ich Ports öffnen, falls ich lokale Dienste auf dem Router
betreibe, Regeln für die Weiterleitung vorgeben oder mit *Source NAT* die
volle Kontrolle über die Quelladressen auszuüben.

Benutzerdefinierte Regeln
-------------------------

Habe ich ein Problem, das ich mit LuCI nicht in entsprechende Regeln fassen
kann, besteht die Möglichkeit, beliebige Iptables-Befehle in einem
Shell-Skript aufzurufen.
Dieses Skript wird mit jedem Neustart der Firewall, direkt nach dem
Abarbeiten der Basis-Regeln abgearbeitet.

