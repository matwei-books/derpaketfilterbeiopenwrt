
Kann ich Paketfilter umgehen?
=============================

Für den Entwurf von Paketfilterregeln,, das Testen und das Monitoring ist es
vorteilhaft, wenn ich weiß, auf welche Art und Weise ein Paketfilter
umgangen werden kann.
Diesem Thema widmet sich dieses Kapitel.

Nicht alle der hier vorgestellten Möglichkeiten sind von vornherein illegitim
und schädlich.
Jede einzelne muss ich im konkreten Kontext betrachten, in dem der
Paketfilter eingesetzt wird.

Zustandslose Firewallregeln
---------------------------

Eine Möglichkeit, eine Firewall zu umgehen beziehungsweise zu überwinden,
findet sich, wenn diese stateless betrieben wird, also die Conntrack-Module
nicht aktiv sind.

Man kann mit einer stateless Firewall TCP-Verbindungen in einer Richtung
sperren und in der anderen Richtung offen lassen, indem man Datagramme ohne
gesetztes ACK-Bit nur in einer Richtung erlaubt.
Zwar kann man dann aus der anderen Richtung keine Verbindung aufbauen,
jedoch ist es möglich, Informationen über die Rechner hinter dem Paketfilter
zu erlangen.
Sendet man ein Datenpaket mit gesetztem ACK-Bit an einen Rechner hinter dem
Paketfilter, dann antwortet dieser mit TCP-Reset, falls ein Socket an den
Zielport gebunden ist und mit ICMP-Unreachable-Port, wenn nicht.
Beide Antworten gehen üblicherweise durch die Firewall durch und teilen dem
Angreifer auf diese Art mit, ob der betreffende Port offen ist.
Das Programm *nmap* scannt mit Option `-PA` genau nach dieser Methode.

Bei einer stateful Firewall wäre das nicht möglich, weil diese erkennen
würde, dass das erste Datagramm zu keiner gültigen Verbindung gehört und es
damit gleich verwerfen würde.

Normalerweise zieht man als Firewall-Administrator daher stateful
Paketfilterregeln vor.
Lediglich bei speziellen Performance-Problemen kann es nötig sein auf
stateless Regeln auszuweichen.

Nichtlineare Protokolle
-----------------------

Nichtlineare Protokolle sind Protokolle, die mit einer Kombination von
festgelegten und dynamisch ausgehandelten Ports arbeiten, wie zum Beispiel
FTP, TFTP oder SiP.
Ohne Connection Tracking muss ich hier ganze Portbereiche freigeben, so dass
ich im ungünstigsten Fall sogar unerwünschte Datenverbindungen in Kauf
nehmen muss.

Application Level Gateways
--------------------------

Application Level Gateways (ALG) erlauben es, Paketfilter zu umgehen.
Ihre Aufgabe ist es, explizit den Datenverkehr zu kontrollieren und zu
steuern, der mit einfachen Paketfiltern nicht kontrolliert werden kann.
Das sind meist Protokolle der oberen vier OSI-Schichten.
Da die ALG zu genau diesem Zweck im Netz platziert werden, lasse ich sie
aus den weiteren Betrachtungen hier aus.
Ich behalte aber im Hinterkopf, dass ALG einen möglichen Weg bieten können,
auf dem Daten mein Netz unkontrolliert erreichen oder verlassen.

Virtual Private Networks
------------------------

Das gleiche gilt für VPN, seien diese mit IPsec, OpenVPN, SSH-Tunneln oder
auf andere Art und Weise realisiert.
Diese kann ich nur an den Endpunkten, den VPN-Gateways, kontrollieren.

Habe ich Bedenken bezüglich des Verkehrs, der durch die VPN geht, dann
platziere ich einen Paketfilter direkt auf dem VPN-Gateway.
Alternativ lasse ich den Datenverkehr aus dem VPN nicht direkt in mein Netz
sondern nur über einen vorgeschalteten Paketfilter, zum Beispiel den der
DMZ, indem ich das VPN-Gateway genau dort platziere.

Zusätzlich sperre ich allen anderen VPN-Datenverkehr mit den Paketfiltern,
so dass deren Regeln nicht umgangen werden können.

NAT Traversal
-------------

NAT Traversal ist, je nach Gegebenheit, möglicherweise eine gewünschte
Methode, einen Paketfilter zu passieren.
Dabei geht es darum, einen direkte TCP- oder UDP-Verbindung zwischen zwei
Rechnern aufzubauen, die sich beide hinter einer NAT-Box befinden.
VoIP-Verbindungen oder Peer-to-Peer-Netze, die geringe Latenz benötigen,
sind mögliche Anwendungen.

Das Problem besteht darin, dass Rechner hinter NAT-Boxen nicht direkt
adressiert werden können.
Sitzt nur ein Partner hinter einer NAT-Box, kann dieser die Verbindung zum
anderen aufbauen.
Sitzen beide Partner hinter NAT-Boxen ist eine unmittelbare direkte
Verbindung nicht möglich.

Dann kann man sich mit einem Rendezvous-Server behelfen, zu dem sich beide
Partner verbinden und der die nötigen Informationen weiterleitet, damit die
Partner eine direkte Verbindung aufbauen können.
Dafür gibt es verschiedene Lösungen, die mit unterschiedlichen NAT-Boxen
umgehen können.

Je nachdem, ob solch direkter Verkehr in meiner Sicherheitsrichtlinie
erlaubt ist oder nicht, muss ich meine Paketfilter-Regeln entsprechend
anpassen.

Netzwerk Topologie
------------------

Eine nicht zu unterschätzende Möglichkeit, Paketfilter zu überwinden, ist
diese zu umgehen, wenn es mehrere Wege zum Ziel gibt.
Das kann ein vermaschtes Netz sein, eine zweite Verbindung zum Internet oder
Daten, die über das Netz eines Kooperationspartners laufen.
Daher muss ich bei der Umsetzung einer Sicherheitsrichtlinie immer die
komplette Topologie des Netzes, in dem diese gelten soll, kennen.

Fragmentierung
--------------

Mit fragmentierten Paketen ist es gelegentlich möglich, simpel gestrickte
Paketfilter auszutricksen, wenn die Fragmente nicht genug Informationen für
eine korrekte Identifizierung haben.

Die Abhilfe ist relativ einfach: ich kann die Datenpakete direkt am
Paketfilter zusammensetzen oder, falls das zu Performanceproblemen führt,
die Fragmente gleich verwerfen.

Verdeckte Kanäle
----------------

Schließlich gibt es noch die Möglichkeit, Daten unkontrolliert über verdeckte
Kanäle zu versenden, die sich in anderen Protokollen verbergen.

Das können IP-Daten sein, die sich in DNS-Datagrammen oder ICMP-Datagrammen
verbergen. Oder in beliebigen anderen Protokollen, die Nutzerdaten
transportieren können.

Bei ICMP habe ich das Problem, das zumindest einige dieser Datagramme für
das korrekte Funktionieren des Netzes erforderlich sind.
Hier kann ich nur mit Rate-Limits und stateful Paketfilter-Regeln
arbeiten.

Bei allen anderen Protokollen kann ich mit Application Level Gateways
arbeiten und auf diesen den Verkehr für die entsprechenden Protokolle
kontrollieren.

